// Code generated by goctl. DO NOT EDIT.
package types

type HomeBannerResponse struct {
	Banner []*Banner `json:"banners"`
}

type Banner struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"` //图片地址
}

type FlashSaleResponse struct {
	StartTime int64      `json:"start_time"` //抢购开始时间
	Products  []*Product `json:"products"`
}

type Product struct {
	ID          int64   `json:"id"`
	Name        string  `json:"name"`
	Description string  `json:"description"` //商品描述
	Price       float64 `json:"price"`
	Stock       int64   `json:"stock"`    //库存
	Category    string  `json:"category"` //分类
	Status      int64   `json:"status"`   //状态：1.正常，2.下架
	CreateTime  int64   `json:"create_time"`
	UpdateTime  int64   `json:"update_time"`
}

type RecommendRequest struct {
	Cursor int64 `json:"cursor"`
	Ps     int64 `form:"ps, default=20"` //每页的大小
}

type RecommendResponse struct {
	Products      []*Product `json:"products"`
	IsEnd         bool       `json:"is_end"`         //是否是最后一页
	RecommendTime int64      `json:"recommend_time"` //商品列表最后一个商品的推荐时间
}

type CategoryListRequest struct {
	Cursor   int64  `form:"cursor"`         //分页游标
	Ps       int64  `form:"ps, default=20"` //每页的大小
	Category string `form:"category"`
	Sort     string `form:"sort"` //排序
}

type CategoryListResponse struct {
	Products []*Product `json:"products"`
	IsEnd    bool       `json:"is_end"`
	LastVal  int64      `json:"last_val"`
}

type CartListRequest struct {
	UID int64 `form:"uid"`
}

type CartListResponse struct {
	Products []*CartProduct `json:"products"`
}

type CartProduct struct {
	Product *Product `json:"product"`
	Count   int64    `json:"count"` //购买数量
}

type ProductCommentRequest struct {
	ProductID int64 `form:"product_id"`
	Cursor    int64 `form:"cursor"`
	Ps        int64 `form:"ps, default=20"`
}

type ProductCommentResponse struct {
	Comments    []*Comment `json:"comments"`
	IsEnd       bool       `json:"is_end"`
	CommentTime int64      `json:"comment_time"`
}

type Comment struct {
	ID         int64    `json:"id"`
	ProductID  int64    `json:"product_id"`
	Content    string   `json:"content"`
	Images     []*Image `json:"images"`
	User       *User    `json:"user"`
	CreateTime int64    `json:"create_time"`
	UpdateTime int64    `json:"update_time"`
}

type User struct {
	ID     int64  `json:"id"`
	Name   string `json:"name"`
	Avatar string `json:"avatar"`
}

type Image struct {
	ID  int64  `json:"id"`
	URL string `json:"url"`
}

type OrderListRequest struct {
	UID    int64 `form:"uid"`
	Status int32 `form:"status, optional"`
	Cursor int64 `form:"cursor, optional"`
	Ps     int64 `form:"ps, default=20"`
}

type OrderListResponse struct {
	Order     []*Order `json:"orders"`
	IsEnd     bool     `json:"is_end"`
	OrderTime int64    `json:"order_time"`
}

type Order struct {
	OrderID            string  `json:"order_id"`
	Status             int32   `json:"status"`
	Quantity           int64   `json:"quantity"`
	Payment            float64 `json:"payment"`
	TotalProice        float64 `json:"total_price"`
	CreateTime         int64   `json:"create_time"`
	ProductID          int64   `json:"product_id"`
	ProductName        string  `json:"product_name"`
	ProductImage       string  `json:"product_image"`
	ProductDescription string  `json:"product_description"`
}
